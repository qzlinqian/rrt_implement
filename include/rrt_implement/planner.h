// to implement the rrt planner based on the configuration in rrt.h & rrt.cpp
// Created by lesley on 18-8-21.
//

#ifndef PROJECT_PLANNER_H
#define PROJECT_PLANNER_H

#include <rrt_implement/rrt.h>

namespace rrt{
  class PlanningAct{
  private:
    RRTree RRT_Tree;
    Position startPos;
    Position goalPos;
  public:
    PlanningAct(Position &start, Position &goal);
    PlanningAct(){}

    Position generateRandomPos();
//    IDNumber findNearestNode(rrt::Position randomPos);
//    void stepAMetricForward(rrtNode &nearestNode, Position& randomPos);  combine the two to reduce parameter pass
//    Position findNewPos(); followed with insert, combine again
    /*find the nearest node to the random point in the tree,
     * then  calculate the position of the point that generated by stepping a metric long
     * from the nearest point towards the random point*/
    bool getNewNode();
    bool goalIsAchieved();
    bool collisionChecking(rrtNode &Point1, Position &Point2);
  };


}

#endif //PROJECT_PLANNER_H
